document.addEventListener('DOMContentLoaded', function() {

    // --- –õ–û–ì–ò–ö–ê –î–õ–Ø –¢–ê–ô–ú–ï–†–ê –û–ë–†–ê–¢–ù–û–ì–û –û–¢–°–ß–ï–¢–ê ---
    const countdownElement = document.getElementById('countdown');
    if (countdownElement) {
      
          // –ú–µ—Å—è—Ü –∏ –¥–µ–Ω—å –¥–Ω—è —Ä–æ–∂–¥–µ–Ω–∏—è
        const birthdayMonth = 8; // –ê–≤–≥—É—Å—Ç (–Ω—É–º–µ—Ä–∞—Ü–∏—è —Å 0)
        const birthdayDay = 12;

       

    function updateCountdown() {
            const now = new Date();
            const year = now.getFullYear();
            const birthdayDate = new Date(year, birthdayMonth - 1, birthdayDay, 0, 0, 0);

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —Å–µ–≥–æ–¥–Ω—è –ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è
            const isBirthday =
                now.getDate() === birthdayDate.getDate() &&
                now.getMonth() === birthdayDate.getMonth();

            // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø—Ä–æ—à—ë–ª –ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è (–Ω–∞ —Å–ª–µ–¥—É—é—â–∏–π –¥–µ–Ω—å)
            const isAfterBirthday =
                now > birthdayDate &&
                !(now.getDate() === birthdayDate.getDate() && now.getMonth() === birthdayDate.getMonth());

            if (isBirthday) {
                countdownElement.innerHTML = "<div>–¢—É“ì–∞–Ω</div><div>–∫“Ø–Ω—ñ“£–º–µ–Ω</div><div>–∂–∞–Ω—ã–º</div><div>üéâ</div>";
            } else {
                // –ï—Å–ª–∏ –¥–µ–Ω—å —Ä–æ–∂–¥–µ–Ω–∏—è –ø—Ä–æ—à—ë–ª, –Ω–∞—á–∏–Ω–∞–µ–º –æ—Ç—Å—á—ë—Ç –¥–æ —Å–ª–µ–¥—É—é—â–µ–≥–æ –≥–æ–¥–∞
                let nextBirthday = birthdayDate;
                if (isAfterBirthday) {
                    nextBirthday = new Date(year + 1, birthdayMonth - 1, birthdayDay, 0, 0, 0);
                }
                const countDownDate = nextBirthday.getTime();
                const distance = countDownDate - now.getTime();

                const days = Math.floor(distance / (1000 * 60 * 60 * 24));
                const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
                const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
                const seconds = Math.floor((distance % (1000 * 60)) / 1000);

                document.getElementById('days').innerText = days;
                document.getElementById('hours').innerText = hours;
                document.getElementById('minutes').innerText = minutes;
                document.getElementById('seconds').innerText = seconds;
            }
}

        updateCountdown();
        setInterval(updateCountdown, 1000);
    }

    // --- –õ–û–ì–ò–ö–ê –î–õ–Ø –ü–õ–ê–í–ù–û–ì–û –ü–û–Ø–í–õ–ï–ù–ò–Ø –≠–õ–ï–ú–ï–ù–¢–û–í –ü–†–ò –ü–†–û–ö–†–£–¢–ö–ï ---
    function reveal() {
        var reveals = document.querySelectorAll(".reveal");

        for (var i = 0; i < reveals.length; i++) {
            var windowHeight = window.innerHeight;
            var elementTop = reveals[i].getBoundingClientRect().top;
            var elementVisible = 150; // –í—ã—Å–æ—Ç–∞, –Ω–∞ –∫–æ—Ç–æ—Ä–æ–π —ç–ª–µ–º–µ–Ω—Ç —Å—Ç–∞–Ω–æ–≤–∏—Ç—Å—è –≤–∏–¥–∏–º—ã–º

            if (elementTop < windowHeight - elementVisible) {
                reveals[i].classList.add("active");
            } else {
                reveals[i].classList.remove("active");
            }
        }
    }

    window.addEventListener("scroll", reveal);
    // –í—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é –æ–¥–∏–Ω —Ä–∞–∑ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ, —á—Ç–æ–±—ã –ø–æ–∫–∞–∑–∞—Ç—å —ç–ª–µ–º–µ–Ω—Ç—ã, –∫–æ—Ç–æ—Ä—ã–µ —É–∂–µ –Ω–∞ —ç–∫—Ä–∞–Ω–µ
    reveal();

    var swiper = new Swiper(".progress-slide-carousel", {
        loop: true,
        fraction: true,
        autoplay: {
        delay: 4000,
        disableOnInteraction: false,
        },
        pagination: {
        el: ".progress-slide-carousel .swiper-pagination",
        type: "progressbar",
        },
    });


   

});
document.getElementById('play').addEventListener('click', function() {
    const audio = document.querySelector('.song');
    audio.play();
    document.getElementById('overlay').style.display = 'none';
});

document.addEventListener('DOMContentLoaded', function() {
    const audio = document.getElementById('bg-music');
    const playlist = Array.from(document.querySelectorAll('#playlist li')).map(li => li.dataset.src);
    let current = 0;

    function playTrack(index) {
        if (playlist[index]) {
            audio.src = playlist[index];
            audio.play();
        }
    }

    audio.addEventListener('ended', function() {
        current = (current + 1) % playlist.length;
        playTrack(current);
    });

    document.getElementById('play').addEventListener('click', function() {
        playTrack(current);
        document.getElementById('overlay').style.display = 'none';
    });
});


